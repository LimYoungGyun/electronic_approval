<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.electronicapproval.post.dao.PostDAO">
	<select id="selectPostListPage" parameterType="map" resultType="com.electronicapproval.post.model.Post">
		SELECT
			`ROWNUM`
		    , `id`
			, `employeeId`
			, `title`
			, `content`
			, `createdAt`
			, `updatedAt`
		FROM 
			(
				SELECT
					@ROWNUM:=@ROWNUM+1 AS `ROWNUM`
					, `id`
					, `employeeId`
					, `title`
					, `content`
					, `createdAt`
					, `updatedAt`
				FROM
					(
						SELECT
							@ROWNUM:=0 AS `ROWNUM`
							, `id`
							, `employeeId`
							, `title`
							, `content`
							, `createdAt`
							, `updatedAt`
						FROM
							`post`
						ORDER BY `id` DESC
					) TEMP
			) PAGING
		WHERE
			`ROWNUM` BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectPostListCount" resultType="int">
		SELECT
			count(1)
		FROM
			`post`
		ORDER BY `id` DESC
	</select>
	
	<select id="selectPostListLimit5" resultType="com.electronicapproval.post.model.Post">
		SELECT
			`id`
			, `employeeId`
			, `title`
			, `content`
			, `createdAt`
			, `updatedAt`
		FROM
			`post`
		ORDER BY `id` DESC
		Limit 5
	</select>
	
	<select id="selectPostByPostId" parameterType="int" resultType="com.electronicapproval.post.model.Post">
		SELECT
			`id`
			, `employeeId`
			, `title`
			, `content`
			, `createdAt`
			, `updatedAt`
		FROM
			`post`
		WHERE
			`id` = #{id}
	</select>
	
	<insert id="insertPost" parameterType="com.electronicapproval.post.model.Post" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `post`
		(
			`employeeId`
			, `title`
			, `content`
			, `createdAt`
			, `updatedAt`
		)
		VALUES
		(
			#{employeeId}
			, #{title}
			, #{content}
			, NOW()
			, NOW()
		)
	</insert>
	
	<update id="updatePost" parameterType="com.electronicapproval.post.model.Post" useGeneratedKeys="true" keyProperty="id">
		UPDATE `post`
		SET
			`title` = #{title}
			, `content` = #{content}
			, `updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<delete id="deletePostById" parameterType="int">
		DELETE
		FROM
			`post`
		WHERE
			`id` = #{id}
	</delete>
</mapper>